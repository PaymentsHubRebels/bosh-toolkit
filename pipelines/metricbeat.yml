resource_types:
- name: curl
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: source-code
  type: git
  source:
    uri: https://github.com/diefida/metricbeat-boshrelease
    branch: master

- name: bosh-toolkit
  type: git
  source:
    uri: https://github.com/diefida/bosh-toolkit
    branch: master
    
- name: vbox-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-xenial-go_agent

- name: staging
  type: bosh-deployment
  source:
    deployment: metricbeat-staging
    target: ((bosh_target))
    client: ((bosh_client))
    client_secret: ((bosh_client_secret))
    ca_cert: ((bosh_ca_cert))

- name: version
  type: semver
  source:
    driver: s3
    initial_version: 0.16.0
    bucket: bosh-releases-semver
    key: metricbeat/version
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    disable_ssl: true

- name: binary-releases-repo
  type: s3
  source:
    bucket: bosh-binary-releases
    regexp: metricbeat/metricbeat-(.*)-*.tgz
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))


- name: cleanup-trigger
  type: semver
  source:
    driver: s3
    initial_version: 0.0.0
    bucket: triggers
    key: metricbeat/trigger
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    disable_ssl: true

- name: metricbeat-boshrelease
  type: github-release
  source:
    owner: ((github_owner))
    repository: metricbeat-boshrelease
    access_token: ((github_token))

jobs:
- name: acceptance
  plan:
  - get: source-code
    trigger: true
  - get: bosh-toolkit
  - task: run-specs
    file: bosh-toolkit/tasks/run-specs/task.yml
  - get: version
    params: {bump: minor}
  - task: download-blobs
    file: bosh-toolkit/tasks/download-blobs/task.yml
    params:
      release_name: metricbeat
  - task: create-release
    file: bosh-toolkit/tasks/create-bosh-release/task.yml
    params:
      release_name: metricbeat
      final: true
  - get: vbox-stemcell
  - put: staging
    params:
      manifest: source-code/manifests/metricbeat.yml
      stemcells:
      - vbox-stemcell/*.tgz
      releases:
      - release/*.tgz
      vars:
        kibana_host: ((kibana_host))
        elasticsearch_hosts: ((elasticsearch_hosts))

- name: publish
  plan:
  - get: source-code
    trigger: true
    passed: [acceptance]
  - get: bosh-toolkit
  - task: download-blobs
    file: bosh-toolkit/tasks/download-blobs/task.yml
    params:
      release_name: metricbeat
    input_mapping:
      version: metricbeat-version
  - get: version
    params: {bump: minor}
  - task: create-release
    file: bosh-toolkit/tasks/create-bosh-release/task.yml
    params:
      release_name: metricbeat
      final: true
  - task: export-release
    file: bosh-toolkit/tasks/export-release/task.yml
    params:
      release_name: metricbeat
      deployment: metricbeat-staging
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_CA_CERT: ((bosh_ca_cert))
      BOSH_CLIENT: ((bosh_client))
      BOSH_CLIENT_SECRET: ((bosh_client_secret))
  - task: prepare-release-notes
    file: bosh-toolkit/tasks/create-release-notes/task.yml
    params:
      release_name: metricbeat
      github_owner: ((github_owner))
  - put: metricbeat-boshrelease
    params:
      name: version/version
      tag: version/version
      body: release-notes/note.md
      globs:
        - release/*.tgz
  - put: binary-releases-repo
    params:
      file: binary-release/*.tgz    
  - put: cleanup-trigger
    params: {bump: minor}
  - put: version
    params: {bump: minor}

- name: cleanup-environment
  plan:
  - get: cleanup-trigger
    trigger: true
    passed: [publish] 
  - put: staging
    params:
      delete:
        enabled: true
        force: true
  - get: bosh-toolkit
  - task: delete-releases
    file: bosh-toolkit/tasks/delete-releases/task.yml
    params:
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_CA_CERT: ((bosh_ca_cert))
      BOSH_CLIENT: ((bosh_client))
      BOSH_CLIENT_SECRET: ((bosh_client_secret))

  - task: delete-stemcells
    file: bosh-toolkit/tasks/delete-stemcells/task.yml
    params:
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_CA_CERT: ((bosh_ca_cert))
      BOSH_CLIENT: ((bosh_client))
      BOSH_CLIENT_SECRET: ((bosh_client_secret))